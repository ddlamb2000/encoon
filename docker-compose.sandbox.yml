name: "encoon-sandbox"
services:
  db:
    container_name: encoon-db-sandbox
    image: postgres
    restart: unless-stopped
    ports:
      - "5433:5432"
    networks:
      - encoon-sandbox
    configs:
      - source: db-init
        target: /docker-entrypoint-initdb.d/encoon-initdb.sql
    secrets:
      - db-password
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: encoon
      POSTGRES_DB: sandbox
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
  web:
    container_name: encoon-sandbox
    build:
      context: .
      dockerfile_inline: |
        # Go build
        FROM golang:1.20-buster AS go-builder
        WORKDIR /usr/src/encoon
        COPY go.mod go.sum ./
        RUN go mod download && go mod verify
        COPY apis apis
        COPY configuration configuration
        COPY database database
        COPY model model
        COPY utils utils
        COPY encoon.go .
        RUN go build -v

        # Node build
        FROM node:18.13.0 AS node-builder
        WORKDIR /usr/src/encoon
        COPY frontend/package.json frontend/babel.config.json ./
        RUN npm install --save-dev @babel/core @babel/cli && npm install --save-dev babel-preset-minify
        COPY frontend/javascript javascript
        COPY frontend/react react
        RUN npm run build

        # Image
        FROM almalinux:9.1
        LABEL application="εncooη"
        LABEL description="Data structuration, presentation and navigation."
        LABEL version="2.0"
        RUN useradd -ms /bin/bash encoon
        USER encoon
        WORKDIR /usr/encoon
        COPY --from=go-builder /usr/src/encoon/encoon /usr/encoon
        COPY frontend/lib frontend/lib
        COPY frontend/templates frontend/templates
        COPY frontend/encoon.css frontend/encoon.css
        COPY frontend/favicon.ico frontend/favicon.ico
        COPY --from=node-builder /usr/src/encoon/javascript frontend/javascript
        COPY seedData.json .
        CMD ["sh", "-c", "./encoon"]
    restart: unless-stopped
    ports:
      - "8082:8080"
    networks:
      - encoon-sandbox
    configs:
      - source: encoon-configuration
        target: /usr/encoon/configuration.yml
    depends_on:
      - db
configs:
  encoon-configuration:
    file: ./testData/docker.sandbox.yml
  db-init:
    file: ./testData/docker.sandbox.sql
networks:
  encoon-sandbox:
    driver: bridge
secrets:
  db-password:
    file: ./testData/.db_password.sandbox
volumes:
  db:
    driver: local