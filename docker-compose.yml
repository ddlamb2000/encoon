name: "encoon"
services:
  db:
    container_name: database
    image: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    networks:
      - encoon
    configs:
      - source: db-init
        target: /docker-entrypoint-initdb.d/encoon-initdb.sql
    secrets:
      - db-password
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: encoon
      POSTGRES_DB: master
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
  dbadmin:
    container_name: database-admin
    image: dpage/pgadmin4
    restart: unless-stopped
    networks:
      - encoon
    volumes:
      - ./.dbConfiguration/dbAdmin.servers.development.json:/pgadmin4/servers.json
    ports:
      - "5050:80"
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - encoon
  broker1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker1
    depends_on:
      - zookeeper
    restart: unless-stopped
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:19092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_RETENTION_MINUTES: 1209600000
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_LOG4J_ROOT_LOGLEVEL: 'WARN'
    ports:
      - "9092:9092"
    networks:
      - encoon
  broker2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker2
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_RETENTION_MINUTES: 1209600000
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_LOG4J_ROOT_LOGLEVEL: 'WARN'
    ports:
      - "9093:9093"
    networks:
      - encoon
  broker3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker3
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker3:39092,PLAINTEXT_HOST://localhost:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_RETENTION_MINUTES: 1209600000
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_LOG4J_ROOT_LOGLEVEL: 'WARN'
    ports:
      - "9094:9094"
    networks:
      - encoon
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-admin
    restart: unless-stopped
    depends_on:
      - broker1
    ports:
      - "8088:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker1:19092
    networks:
      - encoon
  v2:
    build:
      context: ./v2
      dockerfile: Dockerfile.development
    container_name: encoon-v2
    image: encoon-v2-development
    volumes:
      - ./v2:/usr/src/encoon/v2
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ENCOON_MOCK_DB_LOCALHOST: db
    networks:
      - encoon
    depends_on:
      - db
  backend-development:
    build:
      context: ./backend
      dockerfile: Dockerfile.development
    container_name: backend-development
    image: backend-encoon-development
    volumes:
      - ./backend:/usr/src/encoon/backend
    restart: unless-stopped
    environment:
      ENCOON_MOCK_DB_LOCALHOST: db
    networks:
      - encoon
    depends_on:
      - db
      - broker1
  backend-sandbox1:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    container_name: backend-sandbox1
    image: backend-encoon-production
    restart: unless-stopped
    configs:
      - source: encoon-configuration-sandbox
        target: /usr/encoon/configuration.yml
    volumes:
      - ./.backup:/usr/encoon/.backup
    networks:
      - encoon
    depends_on:
      - db
      - broker1
  backend-sandbox2:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    container_name: backend-sandbox2
    image: backend-encoon-production
    restart: unless-stopped
    configs:
      - source: encoon-configuration-sandbox
        target: /usr/encoon/configuration.yml
    networks:
      - encoon
    depends_on:
      - db
      - broker1
  backend-sandbox3:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    container_name: backend-sandbox3
    image: backend-encoon-production
    restart: unless-stopped
    configs:
      - source: encoon-configuration-sandbox
        target: /usr/encoon/configuration.yml
    networks:
      - encoon
    depends_on:
      - db
      - broker1
  frontend-development:
    build:
      context: ./frontend
      dockerfile: Dockerfile.development
    container_name: frontend-development
    image: frontend-encoon-development
    restart: unless-stopped
    volumes:
      - ./frontend:/usr/src/encoon/frontend
    ports:
      - "5173:5173"
    environment:
      KAFKA_BROKERS: broker1:19092
      KAFKA_CLIENT_ID: frontend-encoon-development
      KAFKA_GROUP_ID: frontend-encoon-development
      TOPIC_PREFIX: encoon
    networks:
      - encoon
    depends_on:
      - broker1
  frontend-sandbox:
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
    container_name: frontend-sandbox
    image: frontend-encoon-production
    restart: unless-stopped
    ports:
      - "5174:3000"
    environment:
      KAFKA_BROKERS: broker1:19092
      KAFKA_CLIENT_ID: frontend-encoon-sandbox
      KAFKA_GROUP_ID: frontend-encoon-sandbox
      TOPIC_PREFIX: encoon
    networks:
      - encoon
    depends_on:
      - broker1
  system-test:
    build:
      context: ./backend
      dockerfile: Dockerfile.systemTest
    container_name: system-test
    image: system-test-encoon
    networks:
      - encoon
    environment:
      ENCOON_MOCK_DB_LOCALHOST: db
      ENCOON_KEEP_ALIVE_AFTER_SECONDS: 900
    volumes:
      - ./:/usr/src/encoon
    depends_on:
      - db
    command: sh -c "./testData/run_all_tests.sh"
configs:
  encoon-configuration-sandbox:
    file: ./backend/testData/sandbox.yml
  db-init:
    file: ./.dbConfiguration/docker.sql
networks:
  encoon:
    driver: bridge
secrets:
  db-password:
    file: ./.dbConfiguration/.db_password
volumes:
  db:
    driver: local