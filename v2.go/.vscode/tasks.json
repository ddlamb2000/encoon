{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Start local web server",
            "type": "shell",
            "command": "go run . -configuration ./testData/local-development.yml",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "Export data from master",
            "type": "shell",
            "command": "go run . -export master -exportfile ./seedData/master.yml",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "Run all tests",
            "type": "shell",
            "command": "./scripts/run_all_tests.sh",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "Open all test coverage",
            "type": "shell",
            "command": "./scripts/open_test_coverage.sh",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "Build encoon docker image",
            "type": "shell",
            "command": "docker build -t encoon .",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "Start encoon docker testing container",
            "type": "shell",
            "command": "docker run -d -p 8081:8081 -it --restart=unless-stopped --name=\"encoon\" encoon && docker network connect encoon encoon && docker cp testData/docker-testing.yml encoon:/usr/encoon/configuration.yml",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "Pull Postgres docker image",
            "type": "shell",
            "command": "docker pull postgres",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "Start Postgres container",
            "type": "shell",
            "command": "docker run -d -p 5432:5432 --restart=unless-stopped --name=\"postgres-encoon\" -e POSTGRES_USER=\"encoon\" -e POSTGRES_PASSWORD=\"encoon\" -e POSTGRES_DB=\"test\" postgres && docker network connect encoon postgres-encoon",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "Create docker network",
            "type": "shell",
            "command": "docker network create encoon",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
    ]
}