version: "3.9"
name: "encoon-development"
services:
  db:
    container_name: encoon-db-development
    image: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    networks:
      - encoon
    configs:
      - source: db-init
        target: /docker-entrypoint-initdb.d/encoon-initdb.sql
    secrets:
      - db-password
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: encoon
      POSTGRES_DB: master
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
  devcontainer:
    build:
      context: .
      dockerfile: ./Dockerfile.devcontainer
    container_name: encoon-devcontainer
    image: encoon-devcontainer
    volumes:
      - ./:/usr/src/encoon
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - encoon
    depends_on:
      - db
  web-test:
    build: .
    container_name: encoon-web-test
    image: encoon
    restart: unless-stopped
    ports:
      - "8081:8080"
    networks:
      - encoon
    configs:
      - source: encoon-configuration
        target: /usr/encoon/configuration.yml
    depends_on:
      - db
  system-test:
    build:
      context: .
      dockerfile: ./Dockerfile.systemTest
    container_name: encoon-system-test
    image: encoon-system-test
    networks:
      - encoon
    environment:
      - ENCOON_MOCK_DB_LOCALHOST=db
      - ENCOON_KEEP_ALIVE_AFTER_SECONDS=900
    depends_on:
      - db
    command: sh -c "./testData/run_all_tests.sh"
configs:
  encoon-configuration:
    file: ./testData/docker.testing.yml
  db-init:
    file: ./testData/docker.testing.sql
networks:
  encoon:
    driver: bridge
secrets:
  db-password:
    file: ./testData/.db_password
volumes:
  db:
    driver: local