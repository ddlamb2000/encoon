name: "encoon-development"
services:
  db:
    container_name: encoon-db-development
    image: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    networks:
      - encoon
    configs:
      - source: db-init
        target: /docker-entrypoint-initdb.d/encoon-initdb.sql
    secrets:
      - db-password
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: encoon
      POSTGRES_DB: master
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
  dbadmin:
    container_name: encoon-dbadmin-development
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    networks:
      - encoon
    volumes:
      - ./dbConfigurations/dbAdmin.servers.development.json:/pgadmin4/servers.json
    ports:
      - "5050:80"
    depends_on:
      - db
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: encoon-zookeeper-development
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - encoon
  kafka1:
    image: confluentinc/cp-kafka:latest
    container_name: encoon-kafka1-development
    depends_on:
      - zookeeper
    restart: unless-stopped
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:19092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
    ports:
      - "9092:9092"
    networks:
      - encoon
  kafka2:
    image: confluentinc/cp-kafka:latest
    container_name: encoon-kafka2-development
    depends_on:
      - zookeeper
    restart: unless-stopped
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
    ports:
      - "9093:9093"
    networks:
      - encoon
  kafka3:
    image: confluentinc/cp-kafka:latest
    container_name: encoon-kafka3-development
    depends_on:
      - zookeeper
    restart: unless-stopped
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:39092,PLAINTEXT_HOST://localhost:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
    ports:
      - "9094:9094"
    networks:
      - encoon
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: encoon-kafka-ui-development
    restart: unless-stopped
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    ports:
      - "8088:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:19092,kafka2:29092,kafka3:39092
    networks:
      - encoon
  apis:
    build:
      context: ./apis
      dockerfile: Dockerfile.development
    container_name: encoon-apis-development
    image: encoon-apis-development
    volumes:
      - ./apis:/usr/src/encoon/apis
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - encoon
    environment:
      - ENCOON_MOCK_DB_LOCALHOST=db
    depends_on:
      - db
  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile.development
    container_name: encoon-ui-development
    image: encoon-ui-development
    restart: unless-stopped
    volumes:
      - ./ui:/usr/src/encoon/ui
    ports:
      - "5173:5173"
    networks:
      - encoon
  system-test:
    build:
      context: ./apis
      dockerfile: Dockerfile.systemTest
    container_name: encoon-system-test
    image: encoon-system-test
    networks:
      - encoon
    environment:
      - ENCOON_MOCK_DB_LOCALHOST=db
      - ENCOON_KEEP_ALIVE_AFTER_SECONDS=900
    volumes:
      - ./:/usr/src/encoon
    depends_on:
      - db
    command: sh -c "./testData/run_all_tests.sh"
configs:
  encoon-configuration:
    file: ./apis/testData/docker.testing.yml
  db-init:
    file: ./dbConfigurations/docker.testing.sql
networks:
  encoon:
    driver: bridge
secrets:
  db-password:
    file: ./dbConfigurations/.db_password.development
volumes:
  db:
    driver: local