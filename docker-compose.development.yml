name: "encoon-development"
services:
  db:
    container_name: encoon-db-development
    image: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    networks:
      - encoon
    configs:
      - source: db-init
        target: /docker-entrypoint-initdb.d/encoon-initdb.sql
    secrets:
      - db-password
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: encoon
      POSTGRES_DB: master
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
  dbadmin:
    container_name: encoon-dbadmin-development
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    networks:
      - encoon
    volumes:
      - ./dbConfigurations/dbAdmin.servers.development.json:/pgadmin4/servers.json
    ports:
      - "5050:80"
    depends_on:
      - db
  apis:
    build:
      context: ./apis
      dockerfile: Dockerfile.development
    container_name: encoon-apis-development
    image: encoon-apis-development
    volumes:
      - ./apis:/usr/src/encoon/apis
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - encoon
    environment:
      - ENCOON_MOCK_DB_LOCALHOST=db
    depends_on:
      - db
  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile.development
    container_name: encoon-ui-development
    image: encoon-ui-development
    volumes:
      - ./ui:/usr/src/encoon/ui
    ports:
      - "5173:5173"
    networks:
      - encoon
  system-test:
    build:
      context: .
      dockerfile_inline: |
        FROM golang:1.23.4
        WORKDIR /usr/src/encoon/apis
        COPY apis/go.mod apis/go.sum .
        RUN go mod download && go mod verify
    container_name: encoon-system-test
    image: encoon-system-test
    networks:
      - encoon
    environment:
      - ENCOON_MOCK_DB_LOCALHOST=db
      - ENCOON_KEEP_ALIVE_AFTER_SECONDS=900
    volumes:
      - ./:/usr/src/encoon
    depends_on:
      - db
    command: sh -c "./testData/run_all_tests.sh"
configs:
  encoon-configuration:
    file: ./apis/testData/docker.testing.yml
  db-init:
    file: ./dbConfigurations/docker.testing.sql
networks:
  encoon:
    driver: bridge
secrets:
  db-password:
    file: ./dbConfigurations/.db_password.development
volumes:
  db:
    driver: local