<%= render :partial => 'layouts/tinymce' %>
<%= form_tag(new_row ?
              create_path(:grid => @grid.uuid, :filters => @filters) :
              update_path(:grid => @grid.uuid, :row => @row.uuid, :filters => @filters),
             :remote => true,
             :id => 'edit-form') do %>
  <%= hidden_field_tag "lock_version", @row.lock_version %>
  <%= hidden_field_tag "container", @container %>
  <%= hidden_field_tag "refresh_list", @refresh_list if @refresh_list.present? %>
  <table class="form">
    <% if @grid.has_translation and @grid.has_name %>
      <tr id="header-name">
        <td class="header">
          <%= label_tag :name, t('field.name'), :class => "required" %>
        </td>
        <td class="string">
          <%= text_field_tag :name, @row_loc.name, :size => "70x1" %>
        </td>
      </tr>
    <% end %>
    <% for column in @table_columns %>
      <% description = column.description.present? ?
          ("<span title='#{column.description}' class='help'>#{column.name}</span>") :
          "#{column.name}" %>
      <%= edit_entity(@row, column, description) %>
    <% end %>
    <tr id="header-name">
      <td class="header">
        <%= label_tag :uri, t('field.uri') %>
      </td>
      <td class="string">
        <%= text_field_tag :uri, @row.uri, :size => "70x1" %>
      </td>
    </tr>
    <% if @grid.has_translation and @grid.has_description %>
      <tr><td>&nbsp;</td><td>&nbsp;</td></tr>
      <tr>
        <td class="header"></td>
        <td class="string">
          <%= text_area_tag :description, @row_loc.description, :size => "70x10" %>
        </td>
      </tr>
    <% end %>
  </table>
  <footer class="actions">
    <% if @row.was_updated? %><div><small><%= display_updated_date(@row) %></small></div><% end %>
    <span class="button">
      <%= label_tag :begin, t('field.begin_date') %>
      <%= text_field_tag :begin, I18n.l(@row.begin), :size => "10x1", :class => "datepicker" %>
    </span>
    <% if not new_row %>
      <span class="button">
        <%= radio_button_tag :mode, :correction, true %>
        <%= t 'version.update' %>
        <%= radio_button_tag :mode, :new_version %>
        <%= t 'version.new' %>
      </span> |
      <span class="button">
        <%= check_box_tag :enabled, "t", @row.enabled %>
        <%= t 'field.active' %>
      </span>
    <% end %>
    <div class="validation-error"></div>
  </footer>
<% end %>
<script>
  $(".datepicker").datepicker({
    numberOfMonths: 1,
    changeMonth: true,
    changeYear: true,
    showButtonPanel: true,
    currentText: "<%= t 'date.datepicker-currentText' %>",
    closeText: "<%= t 'date.datepicker-closeText' %>",
    dateFormat: "<%= t 'date.formats.datepicker' %>",
    dayNamesMin: <%= t('date.datepicker-dayNamesMin').html_safe %>,
    monthNames: <%= t('date.datepicker-monthNames').html_safe %>,
    monthNamesShort: <%= t('date.datepicker-monthNamesShort').html_safe %>
  });
  $("#dialog").dialog({
    resizable: false,
    closeOnEscape: true,
    hide: "puff",
    width: $("#document").width()-15,
    title : "<%= @workspace %> » <%= @grid %><% if not new_row %> » <%= @grid.row_title(@row) %><% end %>",
    buttons: {
      "<%= t 'actions.cancel' %>": function() {
        $("#dialog").dialog("close"); 
      },
      "<%= t(new_row ? 'actions.create' : 'actions.update') %>": function() {
        $("#edit-form").submit();
      }
    }
  });
  $('#edit-form')
    .bind("ajax:beforeSend", function(evt, xhr, settings){
      $(this).find('div.validation-error').html('<%= escape_javascript(render :partial => "layouts/loading") %>');
      $(".field_with_errors").removeClass("field_with_errors");
    })
    .bind("ajax:success", function(evt, data, status, xhr){
      $(this).find('div.validation-error').empty();
      $(".field_with_errors").removeClass("field_with_errors");
      var container = "<%= @container %>";
      if(container == "") {window.location.reload(true);}
      else {$(container).html(xhr.responseText);}
      $("#dialog").dialog("close"); 
    })
    .bind("ajax:error", function(evt, xhr, status, error){
      var errors, errorText;
      try {errors = $.parseJSON(xhr.responseText);}
      catch(err) {errors = {message: err};}
      errorText = "<ul>";
      for(error in errors) {
        errorText += "<li>" + errors[error] + "</li> ";
        $("#header-" + error).addClass("field_with_errors");
      }
      errorText += "</ul>";
      $(this).find('div.validation-error').html(errorText).addClass("error_explanation");
    });
</script>